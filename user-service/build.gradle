plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.11'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.volka.ecommerce'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools:false'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // DB
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    //Config server 연동
    implementation 'org.springframework.cloud:spring-cloud-starter-config' // config 서버 사용 시 config 서버로부터 설정 받기 위함
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap' // 최근 스프링 클라우드 설정에서는 bootstrap 정보를 자동으로 읽어오는 부분이 빠져있기 때문에 의존성에 추가해줘야 설정 정보를 인식할 수 있다
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // spring cloud bus
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    //Feign Client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //Kafka 연동
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // 서킷 브레이커
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Observability
    // SpringBoot3 -> deprecated
//    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
//    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    // new Observability. :: SpringBoot3에선 트레이싱 컨텍스트 전파 방식이 Zipkin의 B3 -> W3C로 바뀜 :: actuator 필수
    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
//    implementation 'io.zipkin.brave:zipkin-reporter-brave'
    implementation 'io.github.openfeign:feign-micrometer' // Spring Cloud OpenFeign의 FeignClient 사용 시 추가

    implementation 'io.micrometer:micrometer-registry-prometheus'

    runtimeOnly 'io.netty:netty-resolver-dns-classes-macos:4.1.111.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
